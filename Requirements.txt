///     TODO    ///

• Weather Card arata datele pentru locația actuala inițial ->>> location request
• Aplicația ar trebui să permită utilizatorului să facă forecast pe mai multe zile/ore. (nu mai mult de 7 zile, si nu mai mult de 24 ore)
• Aplicația ar trebui să permită adăugarea unor orașe ca Favorite.
• Codul trebuie să fie încărcat si accesibil pe un GitHub/Bitbucket, pentru a îl putea clona și rula.


///     DONE    ///
• Aplicația trebuie sa fie funcționala si să ruleze pe un localhost (node intregration, etc.).
• Aplicația trebuie legata la un Weather API, pentru a avea data reale in aplicație. 
• Aplicația trebuie să fie responsive pentru Desktop cât și pentru Mobile.
• Aplicația ar trebui să permită vizualizarea mai multor orașe.
• Aplicația ar trebui să aibă mai multe Teme (themes/desings). (day, night, rain, etc.)
• Folosirea semantică a elementelor Web.





/*
    getSevenDayWeather: function() {
        fetch(apiEndpoint)
    .then(response => response.json())
    .then(data => {
        // Get the weather data for the next 7 days
        const weatherData = data.daily.slice(0, 7);

        // Loop through the weather data and create a card for each day
        weatherData.forEach((day, index) => {
            // Create a new card element
            const card = document.createElement('div');
            card.className = 'card';

            // Create an image element for the weather icon
            const img = document.createElement('img');
            img.src = `https://weather.com/icons/${day.icon}.svg`;
            img.alt = day.icon;
            card.appendChild(img);

            // Create a heading element for the day of the week
            const heading = document.createElement('h2');
            heading.textContent = new Date(day.date).toLocaleDateString('en-US', { weekday: 'short' });
            card.appendChild(heading);

            // Create a paragraph element for the high and low temperatures
            const tempParagraph = document.createElement('p');
            tempParagraph.textContent = `High: ${day.high}, Low: ${day.low}`;
            card.appendChild(tempParagraph);

            // Add the card to the container
            const container = document.querySelector('.container');
            container.appendChild(card);
        });
    })
    .catch(error => console.error(error));
    }

};

// API endpoint to get weather forecast data for the next 7 days
const apiEndpoint = 'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid=' + this.apiKey;
// Call the API to get the weather forecast data

*/


1. location is default type cityName
2. cityName is switched to lat & long and passed to search

/*
displayVremeMainCard: async function(lat, long) {


        const weatherData = await this.fetchVreme(lat, long);
        const sevenDays = document.getElementById('weather-seven-days');


        /*
        const {name} =  data;
        const {icon, main, description} = data.weather[0];
        const {temp, humidity} = data.main;
        const {speed} = data.wind;*/

        //content-specific DIVs in the html document.
        //console.log was used for api testing only//

        /*console.log(name,icon,description, temp, humidity,speed);
        document.querySelector(".city").innerText = "Weather in " + cityName;
        document.querySelector(".weatherIcon").src = "https://openweathermap.org/img/wn/" + icon + "@2x.png";
        document.querySelector(".temp").innerText = parseInt(temp) + "°C";
        document.querySelector(".desc").innerText = description;
        document.querySelector(".humidity").innerText = "Humidity: "+ humidity + "%";
        document.querySelector(".windspeed").innerText = "Wind: "+ parseInt(speed) + "km/h";
        document.querySelector(".weather").classList.remove("loading");*/

        //searching background photo after MAIN description of the weather 
        //and passing it as a search parameter

        /// could be done something to search for the city and the weather 
        //for accurate background representations of current atmospheric conditions
        
    },
*/
        WEATHER CARDS
  
        <!--
        <div class="card" id="1">
            <h2 class="day" id="day-1">Monday</h2>
            <img src="" alt="Sunny">
            <h2>Sunny</h2>
            <p>High: 75, Low: 60</p>
        </div>
        <div class="card" id="2">
            <h2 class="day" id="day-2">Tuesday</h2>
            <img src="" alt="Cloudy">
            <h2>Cloudy</h2>
            <p>High: 68, Low: 52</p>
        </div>
        <div class="card" id="3">
            <h2 class="day" id="day-3">Wednesday</h2>
            <img src="" alt="Rainy">
            <h2>Rainy</h2>
            <p>High: 62, Low: 48</p>
        </div>
        <div class="card" id="4">
            <h2 class="day" id="day-4">Thursday</h2>
            <img src="" alt="Stormy">
            <h2>Stormy</h2>
            <p>High: 65, Low: 50</p>
        </div>
        <div class="card" id="5">
            <h2 class="day" id="day-5">Friday</h2>
            <img src="" alt="Snowy">
            <h2>Snowy</h2>
            <p>High: 32, Low: 20</p>
        </div>
        <div class="card" id="6">
            <h2 class="day" id="day-6">Saturday</h2>
            <img src="" alt="Windy">
            <h2>Windy</h2>
            <p>High: 70, Low: 55</p>
        </div>
        <div class="card" id="7">
            <h2 class="day" id="day-7">Sunday</h2>
            <img src="" alt="Foggy">
            <h2>Foggy</h2>
            <p>High: 63, Low: 48</p>
        </div>-->